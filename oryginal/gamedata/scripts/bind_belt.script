belt = {} --//внешняя таблица пояса

local fix_time = 0           --//фиксатор интервала времени апдейта
local separator = nil        --//переменная для сохранения userdata разделителя
local del_separator = false  --//ключ удаления разделителя
local start_add_belt = false --//ключ начала заполнения таблицы belt
local open_inventory = false --//ключ открытия/закрытия инвентаря

--основная функция итерации инвентаря
--(привязана к функции update() в файле bind_stalker.script)
function IterateInventory()
    if not db.actor or not db.actor:alive() or time_global() < fix_time or open_inventory then return end

    if del_separator and separator then
        this.DeleteSeparator()
    end

    if separator then
        belt = {}
        db.actor:inventory_for_each(ScanInventory)
        del_separator = true
        start_add_belt = false
    else
        separator = alife():create("separator", db.actor:position(), db.actor:level_vertex_id(), 
        db.actor:game_vertex_id(), db.actor:id())
    end
end

--функция удаления разделителя 
function DeleteSeparator()
    alife():release(separator, true)
    separator = nil
    del_separator = false
    fix_time = time_global() + 1000 --//текущее время + интервал между циклами апдейта
    -- test_time = test_time + 1
end

--функция сканирования инвентаря
function ScanInventory(item)
    local section = item:section()

    if start_add_belt and not DetermineSlot(item:id()) then
        if not belt[section] then
            belt[section] = 1
        else
            belt[section] = belt[section] + 1
        end
    end

    if item:section() == "separator" then
        start_add_belt = true
    end
end

--функция определения привязки объекта к одному из слотов
function DetermineSlot(item_id) 
    for i=0, 12 do
        local obj = db.actor:item_in_slot( i )
        if obj and obj:id() == item_id then return true end
    end

    return false
end

--функция отключения итерации при открытии инвентаря 
--(привязана к колбэку info_callback() в файле bind_stalker.script)
function InventoryInfo(info)
    if info == "ui_inventory" then
        open_inventory = true
        this.DeleteSeparator()
    elseif info == "ui_inventory_hide" then
        open_inventory = false
    end
end

--функция сброса итерации, при взятии/выбрасывании предметов инвентаря 
--(привязана к колбэкам on_item_take() и on_item_drop () в файле bind_stalker.script)
function TakeAndDrop(item)
    if item:section() == "separator" or not separator then return end

    if not open_inventory then
        this.DeleteSeparator()
    end
end

-- function check_automedic_system(obj)
	-- local obj = db.actor:item_in_slot(i)
	-- if obj and obj:id() == "automedic_system" then return true
    -- end
    -- return false
-- end

function check_automedic_system()
	return (belt["automedic_system"]~=nil and belt["automedic_system"]>0)
	-- then return true
    -- end
    -- return false
end
