-- Based on jr_outfit_arms.script by Lordmuzer

function attach( sm )
	sm:subscribe({ signal = "on_first_update",	fun = this.on_first_update })
	sm:subscribe({ signal = "on_item_to_slot",	fun = this.on_item_to_slot })
	sm:subscribe({ signal = "on_drop",			fun = this.check_drop })
	sm:subscribe({ signal = "on_item_to_ruck",	fun = this.check_drop })
end


local exo_config = {
	--Вот эти стандартные текстуры используемые на огсе-стволах будут подменяться.
	["textures_to_replace_exo"] = {
		"act\\act_arm_perchatka_cs_clear",
		"act\\act_arm_perchatka_cs_clear_bump",
	},

	-- special arm set when no outfit in slot
	["no_outfit_exo"] = {
		"act\\act_arm_perchatka_cs_clear",
		"act\\act_arm_perchatka_cs_clear_bump"
	},

	["stalker_exo_kurtka"] = {
		"act\\arms\\act_arm_perchatka_cs_clear",
		"act\\arms\\act_arm_perchatka_cs_clear_bump"
	},
	["stalker_exo_kurtka_green"] = {
		"act\\arms\\act_arm_perchatka_cs_clear",
		"act\\arms\\act_arm_perchatka_cs_clear_bump"
	},
	["stalker_exo_outfit"] = {
		"act\\act_arm_perchatka_cs_clear",
		"act\\act_arm_perchatka_cs_clear_bump"
	},
	["stalker_exo_sci"] = {
		"act\\act_arm_perchatka_cs_clear",
		"act\\act_arm_perchatka_cs_clear_bump"
	},

	["bandit_exo"] = {
		"act\\act_arm_perchatka_cs_clear",
		"act\\act_arm_perchatka_cs_clear_bump"
	},
	["bandit_exo_brown"] = {
		"act\\act_arm_perchatka_cs_clear",
		"act\\act_arm_perchatka_cs_clear_bump"
	},

	["dolg_exo"] = {
		"act\\act_arm_perchatka_cs_clear",
		"act\\act_arm_perchatka_cs_clear_bump"
	},

	["ecolog_exo"] = {
		"act\\act_arm_perchatka_cs_clear",
		"act\\act_arm_perchatka_cs_clear_bump"
	},
	["ecolog_o_exo"] = {
		"act\\act_arm_perchatka_cs_clear",
		"act\\act_arm_perchatka_cs_clear_bump"
	},

	["killer_exo"] = {
		"act\\act_arm_perchatka_cs_clear",
		"act\\act_arm_perchatka_cs_clear_bump"
	},
	["killer_sci_exo"] = {
		"act\\act_arm_perchatka_cs_clear",
		"act\\act_arm_perchatka_cs_clear_bump"
	},

	["monolit_sci_exo"] = {
		"act\\act_arm_perchatka_cs_clear",
		"act\\act_arm_perchatka_cs_clear_bump"
	},

	["nebo_sci_exo"] = {
		"act\\act_arm_perchatka_cs_clear",
		"act\\act_arm_perchatka_cs_clear_bump"
	},

	["soldier_exo"] = {
		"act\\act_arm_perchatka_cs_clear",
		"act\\act_arm_perchatka_cs_clear_bump"
	},
	["soldier_berill_exo"] = {
		"act\\act_arm_perchatka_cs_clear",
		"act\\act_arm_perchatka_cs_clear_bump"
	},
	["soldier_skat_exo"] = {
		"act\\act_arm_perchatka_cs_clear",
		"act\\act_arm_perchatka_cs_clear_bump"
	},

	["svoboda_sci_exo"] = {
		"act\\act_arm_perchatka_cs_clear",
		"act\\act_arm_perchatka_cs_clear_bump"
	},
}

local texture_normal, texture_bump, texture_bump_fix = false, false, false

local function init()
	local def_set = exo_config[ "textures_to_replace_exo" ]

	local textures = texture_find(def_set[1] .. "*")

	for name, tex in pairs(textures) do
		if string.find(name, "_bump#") then
			texture_bump_fix = tex
		elseif string.find(name, "_bump") then
			texture_bump = tex
		else
			texture_normal = tex
		end
	end



--	ASSERT(texture_normal, "Texture [%s] not found", def_set[1]) --такое может быть если на момент вызова в онлайне нет ни одного ствола с нужными текстурами рук.
	ASSERT(not texture_normal or texture_bump, "bump for texture [%s] not found", def_set[1])
	ASSERT(not texture_normal or texture_bump_fix, "bump# for texture [%s] not found", def_set[1])
end

local last_config = false
local function apply_arm_set(new_config)
	if not texture_normal then 
init() end
	if not texture_normal then return end

	if new_config ~= last_config then
		last_config = new_config

		local new_set = exo_config[ new_config ]
		ASSERT(new_set, "unknown exo_config: [%s]", new_config)

		texture_normal:load(new_set[1])
		texture_bump:load(new_set[2])
		texture_bump_fix:load(new_set[2] .. "#")
    end
end


function on_first_update()
	local outfit = db.actor:item_in_slot(6)
	if not outfit then
		apply_arm_set("no_outfit_exo")
	end
end

function on_item_to_slot(obj)
	local outfit = db.actor:item_in_slot(6)
	if outfit then
		local arm_set = get_string(outfit:section(), "exo_set")
		ASSERT(arm_set, "arm_set not found in section [%s]", outfit:section())
		apply_arm_set(arm_set)
	end
end

function check_drop(obj)
	if not obj:is_outfit() then return end

	local outfit = db.actor:item_in_slot(6)
	if not outfit then
		apply_arm_set("no_outfit") 
	end
end
