-- Биндер метательных ножей
-- Last Stalker on OGSR x64
-- Last edit: 26.09.2019 by marafonec 

function init(obj)
    local new_binder = nms_binder(obj)
    obj:bind_object(new_binder)
end

class "nms_binder" (object_binder)
function nms_binder:__init(obj) super(obj)
end 

function nms_binder:reload(section)
    object_binder.reload(self, section)
end

function nms_binder:reinit()
    object_binder.reinit(self)
end

function nms_binder:net_save_relevant()
    return true
end

function nms_binder:save(packet)
    object_binder.save(self, packet)
end

function nms_binder:load(reader)
	object_binder.load(self, reader)
end

function nms_binder:net_spawn(data)
    if not object_binder.net_spawn(self, data) then
        return false
    end
    self.load = self.object:get_ammo_in_magazine()
    return true
end

function nms_binder:net_destroy()
    object_binder.net_destroy(self)
end

function nms_binder:update(delta)
    object_binder.update(self, delta)
	
	if db.actor:active_item() and db.actor:active_item():id() == self.object:id() then 
        local load = self.object:get_ammo_in_magazine()
                if load < self.load and not db.actor:has_info("ui_inventory") then 
			if self:check_shoot() then end
		end

		self.load = load
	else 
	--news_manager.send_tip(db.actor, "Нож в руках но биндер НЕ активен", nil, nil, 10000)
    end
end



--[[ Потом нужно убрать
	local res = level.get_current_ray_query()
	local target_obj = res.object
if target_obj:is_stalker() or target_obj:is_monster() or target_obj:is_trader()
				"npc: sect: ["..target_obj:section().."] ".."name: ["..target_obj:name().."]\\n"..
				"npc: id: "..target_obj:id().." ".."story_id: "..target_obj:story_id().." ".."comm: ["..community.."]\\n"..
				"coords: X "..target_obj:position().x..", Y "..target_obj:position().y..", Z "..target_obj:position().z.."\\n"..
				"level_vertex: "..target_obj:level_vertex_id()..", game_vertex: "..target_obj:game_vertex_id().."\\n"..
if target_obj:is_ammo()

	local bone  = res.element
		if bone then
			local bone_name = target_obj:get_bone_name(bone)
			LogicText = LogicText.."\\n\\nbone index=".. bone ..", name="..bone_name
		end

	elseif res.mtl then
		local mtl = res.mtl
		LogicText = LogicText.."mtl: m_Name: "..tostring(mtl.m_Name).."\\n"..
			"mtl: m_Desc: "..tostring(mtl.m_Desc).."\\n"..
			"------------------\\n"..
			"Flags: "..get_mtl_flags(mtl.Flags).."\\n"..

	local dist = res.range
]]








function nms_binder:check_shoot()
	local res = level.get_current_ray_query()
	local target_obj = res.object
  	local a = db.actor
  	local itm = a:item_in_slot(0)
  	local ammo = ""

  	if itm:section() == "wpn_knife_d" then ammo = "ammo_knife"
   	elseif itm:section() == "wpn_knife_bak" then ammo = "ammo_knife_bak"
   	elseif itm:section() == "wpn_knife_map" then ammo = "ammo_knife_map"
   	elseif itm:section() == "wpn_knife_tanto" then ammo = "ammo_knife_tanto"
  	end

  	if not target_obj then 
		local dist = res.range
		if dist > 70 then dist = 70 end -- 70 - дальность броска ножа
			lv = a:level_vertex_id()
			gv = a:game_vertex_id()
			pos = a:position()
			dir = device().cam_dir
			lvnew = level.vertex_in_direction(lv,dir,dist)
			pos2 = vector()
			
			if lvnew ~= lv then
				pos2 = level.vertex_position(lvnew) 
			else
				pos2 = pos
			end
	alife():create(ammo, vector():set(pos2.x, pos2.y, pos2.z),lvnew,gv )
	return false
  	else 
		local obj1 = target_obj:id()
		local lvid = target_obj:level_vertex_id()
		local gvid = target_obj:game_vertex_id()
		local pos = target_obj:position()

		if target_obj:is_stalker() or target_obj:is_monster() or target_obj:is_trader() then
			  if target_obj then alife():create(ammo, vector():set(pos.x, pos.y, pos.z), lvid, gvid, obj1)  end
		else
	  		local rast = math.random(-50,50)/100
	 		 if target_obj then alife():create(ammo, vector():set(pos.x+rast, pos.y, pos.z+rast), lvid, gvid) end
		end  
  	end
end
