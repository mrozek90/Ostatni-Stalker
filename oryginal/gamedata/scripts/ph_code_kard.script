----------------------------------------------------------------------------------------------------
-- Code Pad
----------------------------------------------------------------------------------------------------
-- Author: Jim
-- Доработка: 2006 @ Oleg Kreptul (Haron) okreptul@yahoo.com
----------------------------------------------------------------------------------------------------
function printf() end


class "codepad_card"

function codepad_card:__init(obj, storage)
    self.object = obj
    self.st     = storage
	-- self.tm_id = time_monitor.register_binder("ph_code_kard")
end

function codepad_card:reset_scheme()
    self.object:set_nonscript_usable(false)
        self.object:play_cycle(self.st.anim, self.st.blending)
end

function codepad_card:update(delta)
-- time_monitor.binder_update_start("ph_code_kard", self.tm_id)
	if xr_logic.try_switch_to_another_section(self.object, self.st, db.actor) then
		return
	end
	-- time_monitor.binder_update_end("ph_code_kard", self.tm_id)
end

function codepad_card:try_switch()
	local st = db.storage[self.object:id()]
	if st.active_scheme and st.active_scheme == "codepad_card" and self.st.on_press then
		if xr_logic.switch_to_section(self.object, self.st,
		   xr_logic.pick_section_from_condlist(db.actor, self.object, self.st.on_press.condlist)) then
			return true
		end
	end
	return false
end

function codepad_card:use_callback(obj, who)
    local numpad = ui_numpad_kard.numpad_kard(self)
    level.start_stop_menu(numpad,true)
	
	if self.st.on_use then		
		if xr_logic.switch_to_section(self.object, self.st,
		   xr_logic.pick_section_from_condlist(db.actor, self.object, self.st.on_use.condlist)) then
			return true
		end
	end
	
	if self.st.on_use2 then		
		if xr_logic.switch_to_section(self.object, self.st,
		   xr_logic.pick_section_from_condlist(db.actor, self.object, self.st.on_use2.condlist)) then
			return true
		end
	end
	
	if self.st.on_use3 then		
		if xr_logic.switch_to_section(self.object, self.st,
		   xr_logic.pick_section_from_condlist(db.actor, self.object, self.st.on_use3.condlist)) then
			return true
		end
	end
end

function codepad_card:OnNumberReceive(text)
    if self.st.code then
        if tonumber(text) == self.st.code then
            if self.st.on_code then
                printf("ph_code_kard <OnNumberReceive>: on_code [%s]", text)
                xr_logic.pick_section_from_condlist(db.actor, self.object, self.st.on_code.condlist)
            end
        end
    else
        local condlist = self.st.on_check_code[text]
        if condlist then
            printf("ph_code_kard <OnNumberReceive>: on_check_code [%s]", text)
            xr_logic.pick_section_from_condlist(db.actor, self.object, condlist)
        end
    end
end
function codepad_card:deactivate()
	self.object:set_tip_text("")
end

---------------------------------------------------------------------------------------------------------------------
function add_to_binder(npc, ini, scheme, section, storage)
    local new_action = codepad_card(npc, storage)

    -- Зарегистрировать все actions, в которых должен быть вызван метод reset_scheme при изменении настроек схемы:
    xr_logic.subscribe_action_for_events(npc, storage, new_action)
end

function set_scheme(npc, ini, scheme, section, gulag_name)
    printf("ph_code_kard <set_scheme>: START [%s]", npc:name())

    local st = xr_logic.assign_storage_and_bind(npc, ini, scheme, section)
    st.logic = xr_logic.cfg_get_switch_conditions(ini, section, npc)

	st.on_use    = xr_logic.cfg_get_condlist(ini, section, "on_use", npc)
	st.on_use2    = xr_logic.cfg_get_condlist(ini, section, "on_use2", npc)
	st.on_use3    = xr_logic.cfg_get_condlist(ini, section, "on_use3", npc)
	
	st.tips  = utils.cfg_get_string(ini, section, "tips", npc, false, "", "st_codelock")
    npc:set_tip_text(st.tips)

	st.anim = utils.cfg_get_string(ini, section, "anim", npc, true, "")
	st.blending = utils.cfg_get_bool (ini, section, "anim_blend", npc, false, true)
    if st.blending == nil then 	
       st.blending = true 
    end
    
    st.code = utils.cfg_get_number(ini, section, "code", npc, false)    
    if st.code then
        st.on_code = xr_logic.cfg_get_condlist(ini, section, "on_code", npc)
        printf("ph_code_kard <set_scheme>: on_code [%d]", st.code)
    else
        st.on_check_code = {}

        local i = 1
        local cc = xr_logic.cfg_get_string_and_condlist(ini, section, "on_check_code" .. i, npc)

        while cc do
            st.on_check_code[cc.v1] = cc.condlist
            printf("ph_code_kard <set_scheme>: on_check_code [%s]", cc.v1)
            i = i + 1
            cc = xr_logic.cfg_get_string_and_condlist(ini, section, "on_check_code" .. i, npc)
        end
    end

    printf("ph_code_kard <set_scheme>: END [%s]", npc:name())
end
