class "ini_file_m" (ini_file)

function ini_file_m:__init(file_name) super(file_name)
end

--/summary/>> таблица строк
function ini_file_m:r_tableZ(section_name, id_name)
	local s_data = self:r_string(section_name, id_name)
	local tbl = {}
	if type(s_data) == "string" and #s_data > 0 then
		for w in string.gmatch(s_data, "%s*([^,]+)%s*") do
			table.insert(tbl, w)
		end
	end
	return tbl
end

--/summary/>> параметры цвета RGB
function ini_file_m:r_color(section_name, id_name)
	local tbl = self:r_tableZ(section_name, id_name)
	
	local function getVBV(val)
		if type(val) == "number" then
			if val > 255 then return 255
			elseif val < 0 then return 0
			end
			return val
		end
		return 255
	end
	
	local x = getVBV(tonumber(tbl[1]))
	local y = getVBV(tonumber(tbl[2]))
	local z = getVBV(tonumber(tbl[3]))
	return x,y,z
end

--/summary/>> четырёх-значный вектор (x,y,z,w)
function ini_file_m:r_vector4(section_name, id_name)
	local tbl = self:r_tableZ(section_name, id_name)
	local x = tonumber(tbl[1])
	local y = tonumber(tbl[2])
	local z = tonumber(tbl[3])
	local w = tonumber(tbl[4])
	local vec = vector():set((x or 0), (y or 0), (z or 0))
	vec.w = w or 0
	return vec
end

--/summary/>> два параметра (x, y)
function ini_file_m:r_point(section_name, id_name)
	local tbl = self:r_tableZ(section_name, id_name)
	local x = tonumber(tbl[1])
	local y = tonumber(tbl[2])
	return x, y
end