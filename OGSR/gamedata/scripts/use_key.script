--[[ -----------------------------------------------------------------------------------------------
 File           : use_key.script
 Last Stalker on OGSR x64
 Last edit      : 23.09.2019 by marafonec 
--]] -----------------------------------------------------------------------------------------------

local actor = db.actor
belt_artefacts		= {}
local hit_timer = math.random(10*level.get_time_factor(), 30*level.get_time_factor())

--============================

function update()
ogsr_outfit_arms.on_first_update()

end

function black_soul_nah(npc, actor)
    dialogs.relocate_item_section(actor, "black_soul", "out")
end

--[[ -----------------------------------------------------------------------------------------------
 Description    : Cмена метательных ножей
 Last edit      : 10.01.2016 by marafonec. 
---------------------------------------------------------------------------------------------------]]

local knifes = {"wpn_knife_d", "wpn_knife_bak", "wpn_knife_map", "wpn_knife_tanto", "wpn_knife"}

function drop_knifes(obj)
local a = db.actor

-- ================== ¬ыбросили нож ========================
	-- определ€ем, что выбросили именно метательный нож
	if obj and string.sub(obj:section(),1,6) == "wpn_kn" and obj:section() ~= "wpn_knife" then
	local obj_a = ""
	local obj_k,pos,lv,gv
		-- сопоставили ножи их зар€дам
		if obj:section()     == "wpn_knife_map" then obj_a = "ammo_knife_map"
		elseif obj:section() == "wpn_knife_tanto" then obj_a = "ammo_knife_tanto"
		elseif obj:section() == "wpn_knife_bak" then obj_a = "ammo_knife_bak"
		elseif obj:section() == "wpn_knife_d" then obj_a = "ammo_knife"
		elseif obj:section() == "wpn_knife" then obj_a = ""
		end

	for a=1,65535,1 do
		obj_k=alife():object(a)
		-- если нож находитс€ не у актора - на земле, и никому не принадлежит, ... то 
		if obj_k and obj_k:section_name() ~= "wpn_knife" and obj_k:section_name() == obj:section() and obj_k.parent_id == 65535 then

		-- ... определ€ем его позицию на локации и...
			pos = obj_k.position
			lv = obj_k.m_level_vertex_id
			gv = obj_k.m_game_vertex_id
		-- ... удал€ем сам нож, а на его место спавним его патроны
			alife():release(obj_k,true)
			alife():create(obj_a,pos,lv,gv)
		end
	end
	
	-- пробегаемс€ по инвентарю актора, подсчитываем доступные зар€ды
	local cnt = db.actor:object_count()
	local cnt_ammo = 0
    			for i=0, cnt-1 do
        			local item = db.actor:object(i)
				-- считаем зар€ды к ножу 
        			if item:section() == obj_a then
					cnt_ammo=cnt_ammo+1

				end
    			end 

			-- если находим больше одного зар€да, то пробегаемс€ по инвентарю актора
			if cnt_ammo > 1 then 
			    for i=0, cnt-1 do
        			local item = db.actor:object(i)
				-- если находим зар€ды к ножу - удал€ем 1 зар€д и снова спавним нож
        			if item:section() == obj_a then
					local sobj = alife():object(item:id())
					local sobj_1 = obj:section()
            				if sobj then 
                			     alife():release(sobj,true)
					     alife():create(sobj_1, db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
                			     break 
					end 
        			end
    			    end
			-- если находим только один зар€д, то пробегаемс€ по инвентарю актора
			else 
				for i=0, cnt-1 do
        				local item = db.actor:object(i)	
					local item_1 = db.actor:object(i)	
					-- если находим зар€д к ножу - удал€ем и зар€д и, если находим - и сам нож
					if item:section() == obj_a then
						local inf_k = obj:section()
						local inf = string.gsub (inf_k, "wpn_", "has_")
						db.actor:disable_info_portion(inf)	
						local sobj = alife():object(item:id())	
						if sobj then 
                			     		alife():release(sobj,true)
                			     	end 
        				end
					if item_1:section() == obj:section() then
						local sobj = alife():object(item_1:id())	
						if sobj then 
                			     		alife():release(sobj,true)
                			     	end 
        				end
				end 
			end

	this.knifes_rotation()
	end

-- ================== ¬ыбросили зар€ды к ножам ========================
-- определ€ем, что выбросили именно зар€д

	if obj and obj:section() == "ammo_knife" then
	local weapon = db.actor:object("wpn_knife_d")
	local ammo = db.actor:object("ammo_knife")
	if weapon and ammo == nil then
		local cnt = db.actor:object_count()
    		for i=0, cnt-1 do
        		local item = db.actor:object(i)
        			if item:section() == "wpn_knife_d" then
            				local sobj = alife():object(item:id())
            				if sobj then 
                				alife():release(sobj,true)
                			 end 
        			end
    		end
		db.actor:disable_info_portion("has_knife_d")
	end

	elseif obj and obj:section() == "ammo_knife_bak" then
	local weapon = db.actor:object("wpn_knife_bak")
	local ammo = db.actor:object("ammo_knife_bak")
	if weapon and ammo == nil then
		local cnt = db.actor:object_count()
    		for i=0, cnt-1 do
        		local item = db.actor:object(i)
        			if item:section() == "wpn_knife_bak" then
            				local sobj = alife():object(item:id())
            				if sobj then 
                				alife():release(sobj,true)
                			 end 
        			end
    		end
		db.actor:disable_info_portion("has_knife_bak")
	end

	elseif obj and obj:section() == "ammo_knife_tanto" then
	local weapon = db.actor:object("wpn_knife_tanto")
	local ammo = db.actor:object("ammo_knife_tanto")
	if weapon and ammo == nil then
		local cnt = db.actor:object_count()
    		for i=0, cnt-1 do
        		local item = db.actor:object(i)
        			if item:section() == "wpn_knife_tanto" then
            				local sobj = alife():object(item:id())
            				if sobj then 
                				alife():release(sobj,true)
                			 end 
        			end
    		end
		db.actor:disable_info_portion("has_knife_tanto")
	end
	
	elseif obj and obj:section() == "ammo_knife_map" then

	local weapon = db.actor:object("wpn_knife_map")
	local ammo = db.actor:object("ammo_knife_map")
	if weapon and ammo == nil then
		local cnt = db.actor:object_count()
    		for i=0, cnt-1 do
        		local item = db.actor:object(i)
        			if item:section() == "wpn_knife_map" then
            				local sobj = alife():object(item:id())
            				if sobj then
                				alife():release(sobj,true)
                			 end 
        			end
    		end
		db.actor:disable_info_portion("has_knife_map")
	end
	end

	if a:active_slot() == 0 then
	local itm = a:item_in_slot(0)
		if itm ~= nil then
			return
		else
		this.knifes_rotation()
		end
	end
end

function knifes_rotation()
  	local a = db.actor
if a:active_item() == nil then
		local itm = a:item_in_slot(0)
		local gr
		if itm ~= nil then return end
		if itm == nil then
			for k,v in pairs(knifes) do
				gr = a:object(v)
				if gr then 
					a:move_to_slot(gr)
					a:activate_slot(0)
					break 
				end
			end
			return
		end
		
		local sect = itm:section()

		local n = #knifes
		local pos = 0
		
		for i=1,n do
			if knifes[i]==sect then
				pos = i
				break
			end
		end
		
		for i=1,n do
			pos = pos + 1
			if pos>n then pos = 1 end
			gr = a:object(knifes[pos])
			if gr and knifes[pos]~=sect then
				a:move_to_ruck(itm)
				a:move_to_slot(gr)
				a:activate_slot(0)
				break
			end
		end
	end
end


--[[ -----------------------------------------------------------------------------------------------
 Description    : Ќовые возможности - слоты, рюкзак, по€с
 Last edit      : 26.09.2019 by marafonec 
---------------------------------------------------------------------------------------------------]]

function item_to_belt(obj)
	if obj == nil or alife():object(obj:id()) == nil then 
		return 
	end

	local def_max_weight, def_max_walk_weight, old_max_weight, old_max_walk_weight, new_max_weight, new_max_walk_weight 
	
	if obj:is_artefact() then
		belt_artefacts[obj:name()] = obj:section()
		def_max_weight = system_ini():r_float("inventory", "max_weight")
		def_max_walk_weight = system_ini():r_float("actor_condition", "max_walk_weight")
		old_max_weight = db.actor:get_actor_max_weight()
		old_max_walk_weight = db.actor:get_actor_max_walk_weight()
		koef_weight = system_ini():r_float(obj:section(),"additional_weight")
		new_max_weight = math.max (def_max_weight, old_max_weight + koef_weight)
		new_max_walk_weight = math.max (def_max_walk_weight, old_max_walk_weight + koef_weight)
		db.actor:set_actor_max_weight(new_max_weight)
 		db.actor:set_actor_max_walk_weight(new_max_walk_weight)
	end
end

function item_to_ruck(obj)
if device().precache_frame > 1 then return end --¬о врем€ загрузки ничего не делаем

	if obj == nil or alife():object(obj:id()) == nil then 
		return 
	end

-- =========== ѕума ===============
if string.find(obj:section(), "automedic_system") then
	if  db.actor:has_info("puma_activated") then
		xr_effects.puma_deactivated()
		db.actor:disable_info_portion("puma_activated")
	end
end
-- =========== ѕума ===============

	if string.find(obj:section(), "tank_outfit") then
		get_console():execute("g_god ".."off")
	end

	if string.find(obj:section(), "wpn_gauss") then
		local cnt = db.actor:object_count()
    		for i=0, cnt-1 do
        		local item = db.actor:object(i)
        			if item:section() == "wpn_gauss" then
            				local sobj = alife():object(item:id())
            				if sobj then 
                				alife():release(sobj,true)
                			 end 
        			end
    		end
		alife():create("wpn_gaus_m1", db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
	end

	if string.find(obj:section(), "af_antigrav") then
		alife():create("antigrav", db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
	end

	local def_max_weight, def_max_walk_weight, old_max_weight, old_max_walk_weight, new_max_weight, new_max_walk_weight 
	
	if string.find(obj:section(), "af_") then
		for k,v in pairs(belt_artefacts) do
			if k == obj:name() then
				belt_artefacts[k] = nil
				def_max_weight = system_ini():r_float("inventory", "max_weight")
				def_max_walk_weight = system_ini():r_float("actor_condition", "max_walk_weight")
				old_max_weight = db.actor:get_actor_max_weight()
				old_max_walk_weight = db.actor:get_actor_max_walk_weight()
				koef_weight = system_ini():r_float(obj:section(),"additional_weight")
				new_max_weight = math.max (def_max_weight, old_max_weight - koef_weight)
				new_max_walk_weight = math.max (def_max_walk_weight, old_max_walk_weight - koef_weight)
				db.actor:set_actor_max_weight(new_max_weight)
 				db.actor:set_actor_max_walk_weight(new_max_walk_weight)
			end
		end
	end

if string.find(obj:section(), "malyawa_01") or string.find(obj:section(), "hazar_malyawa") or string.find(obj:section(), "malyawa_02") or string.find(obj:section(), "reanimator_malyawa") or string.find(obj:section(), "doctor_malyawa") or string.find(obj:section(), "agru_code_malyawa") or string.find(obj:section(), "bun_code_malyawa") or string.find(obj:section(), "morlok_pda") or string.find(obj:section(), "shilo_pda")  or string.find(obj:section(), "waterrat_malyawa") or string.find(obj:section(), "gena_maljawa") or string.find(obj:section(), "nestor_pda") or string.find(obj:section(), "mobile")   or string.find(obj:section(), "announcement_1")  or string.find(obj:section(), "announcement_2")  or string.find(obj:section(), "announcement_3")  or string.find(obj:section(), "announcement_4")  or string.find(obj:section(), "announcement_5")  or string.find(obj:section(), "announcement_6") or string.find(obj:section(), "esc_operator_pda") then
remove_item(obj)
news_have()
end

if string.find(obj:section(), "antigrav") then
local actor = db.actor
    if actor then
        local cnt = 0
        actor:iterate_inventory(
            function (dummy, item)
            if item:section() == "antigrav" then cnt = cnt + 1 end
            end
            ,nil)
 	   if cnt > 1 then
           local oItem = actor:object("antigrav") 
    		if oItem then 
        		actor:drop_item(oItem) 
        		alife():release(alife():object(oItem:id()), true) 
    		end
	   end

    end

end

if string.find(obj:section(), "accesscard_hsm_1") then
local actor = db.actor
    if actor then
        local cnt = 0
        actor:iterate_inventory(
            function (dummy, item)
            if item:section() == "accesscard_hsm_1" then cnt = cnt + 1 end
            end
            ,nil)
 	   if cnt > 1 then
           local oItem = actor:object("accesscard_hsm_1") 
    		if oItem then 
        		actor:drop_item(oItem)
        		alife():release(alife():object(oItem:id()), true) 
    		end
	   end
    end
end

if string.find(obj:section(), "accesscard_sor_monkeyhouse") then
local actor = db.actor
    if actor then
        local cnt = 0
        actor:iterate_inventory(
            function (dummy, item)
            if item:section() == "accesscard_sor_monkeyhouse" then cnt = cnt + 1 end
            end
            ,nil)
 	   if cnt > 1 then
           local oItem = actor:object("accesscard_sor_monkeyhouse") 
    		if oItem then 
        		actor:drop_item(oItem)
        		alife():release(alife():object(oItem:id()), true) 
    		end
	   end
    end
end

if string.find(obj:section(), "accesscard_hos_security") then
local actor = db.actor
    if actor then
        local cnt = 0
        actor:iterate_inventory(
            function (dummy, item)
            if item:section() == "accesscard_hos_security" then cnt = cnt + 1 end
            end
            ,nil)
 	   if cnt > 1 then
           local oItem = actor:object("accesscard_hos_security") 
    		if oItem then 
        		actor:drop_item(oItem)
        		alife():release(alife():object(oItem:id()), true) 
    		end
	   end
    end
end

	if string.find(obj:section(), "wpn_warlock_error") then
		local cond = obj:condition()
			if cond > 0.1 then 
			cond = 0.01
			obj:set_condition(cond)
			end
	end



--======= јвторазр€жалка ====KRodin (c) 2019
local enabled = get_bool("options", "autounload_wpn", false)
if not enabled then return end
--if device().precache_frame > 1 then return end --¬о врем€ загрузки ничего не делаем
if not obj:is_weapon_magazined() then return end --Ќе оружие не учитываем
if obj:section() == "wpn_knife_map" or obj:section() == "wpn_knife_bak" or obj:section() == "wpn_knife_d" or obj:section() == "wpn_knife_tanto" or obj:section() == "wpn_knife" or obj:section() == "antigrav" then return end -- ножи не обрабатываем
if db.actor:is_in_slot( obj ) then return end --ќружие в слотах не разр€жаем.
if db.actor:has_info("ui_inventory") then return end --„тоб не было возможных проблем с системой ogse_addons
obj:unload_magazine(true, true) --“еперь движок всЄ сам разр€жает, в т.ч. подствольник, и сам спавнит патроны владельцу.
--======= јвторазр€жалка конец ====

end

function item_to_slot(obj)
if obj == nil or alife():object(obj:id()) == nil then 
		return 
	end
-- =========== ѕума ===============
if string.find(obj:section(), "automedic_system") then
	if  db.actor:dont_has_info("puma_activated") then
		xr_effects.puma_activated()
		db.actor:give_info_portion("puma_activated")
	end
	als_automedic.automaic_check_health()
end
-- =========== ѕума ===============

	if string.find(obj:section(), "tank_outfit") and
		   (level.name() == "hospital") then
		get_console():execute("g_god ".."on")
	end

	if string.find(obj:section(), "antigrav") then
		db.actor:move_to_ruck(obj) 
	end 

	if string.find(obj:section(), "wpn_gauss") then
		local cnt = db.actor:object_count()
    		for i=0, cnt-1 do
        		local item = db.actor:object(i)
        			if item:section() == "wpn_gauss" then
            				local sobj = alife():object(item:id())
            				if sobj then 
                				alife():release(sobj,true)
                			 end 
        			end
    		end
		alife():create("wpn_gaus_m1", db.actor:position(), db.actor:level_vertex_id(), db.actor:game_vertex_id(), db.actor:id())
	end
ogsr_outfit_arms.on_item_to_slot(obj)
end

function item_drop (obj)
	if obj == nil or alife():object(obj:id()) == nil then 
		return 
	end

-- =========== ѕума ===============
if string.find(obj:section(), "automedic_system") and db.actor:has_info("puma_activated") then
		xr_effects.puma_deactivated()
		db.actor:disable_info_portion("puma_activated")
end
-- =========== ѕума ===============

	if string.find(obj:section(), "af_antigrav") then
		    local oItem = db.actor:object("antigrav") 
		    if oItem then 
		        db.actor:drop_item(oItem) 
			alife():release(alife():object(oItem:id()), true)
		    end
	end

	if string.find(obj:section(), "tank_outfit") then
		get_console():execute("g_god ".."off")
	end

	local def_max_weight, def_max_walk_weight, old_max_weight, old_max_walk_weight, new_max_weight, new_max_walk_weight 

	if string.find(obj:section(), "af_") then
		for k,v in pairs(belt_artefacts) do
			if obj:name() == k then
				belt_artefacts[k] = nil
				def_max_weight = system_ini():r_float("inventory", "max_weight")
				def_max_walk_weight = system_ini():r_float("actor_condition", "max_walk_weight")
				old_max_weight = db.actor:get_actor_max_weight()
				old_max_walk_weight = db.actor:get_actor_max_walk_weight()
				koef_weight = system_ini():r_float(obj:section(),"additional_weight")
				new_max_weight = math.max (def_max_weight, old_max_weight - koef_weight)
				new_max_walk_weight = math.max (def_max_walk_weight, old_max_walk_weight - koef_weight)
				db.actor:set_actor_max_weight(new_max_weight)
 				db.actor:set_actor_max_walk_weight(new_max_walk_weight)
			end
		end
	end

end
function remove_item(item)
if item then
	local sobj=alife():object(item:id())
	if sobj then alife():release(sobj,true) end
	return true
end
return false
end


function news_have(first_speaker, second_speaker)
	news_manager.send_tip(db.actor, "%c[default]Otrzymano nowe informacje.", nil, nil, 10000)
end

function news_monahi(first_speaker, second_speaker)
	news_manager.send_tip(db.actor, "%c[default]Wszyscy mnisi zginкli.", nil, nil, 15000)
end
