--[[-----------------------------------------------------------------------------------------------
 File         : pda.script
 Description  : Ѕилдовска€ кнопка выхода и метки в ѕƒј
 Copyright    : Shadows Addon
 Authors      : Shadows and Charsi
 Date         : 02.08.2011-13.08.2011
--]]-----------------------------------------------------------------------------------------------

local rec_wnd = nil
local initial = false

class "PdaWindow" (CUIScriptWnd)
function PdaWindow:__init(owner) super()
    self.owner = owner
    self:Init(0,0,1024,768)
    self:InitControls()
end

function PdaWindow:__finalize() end
function PdaWindow:InitControls()
    self.stat = CUIStatic()
    self.stat:Init(0,0,1024,768)
    self.owner:AttachChild(self.stat)
	local ctrl = false
	local xml = CScriptXmlInit()
	xml:ParseFile("ui_shadows_addon.xml")
	-- кнопка выход
	ctrl = xml:Init3tButton("btn_pda_exit",self.stat)
	if device().width/device().height==5/4 or device().width/device().height==16/9 then ctrl:Init(0,0,98,26) end
	self:Register(ctrl,"btn_pda_exit")
	self:AddCallback("btn_pda_exit",ui_events.BUTTON_CLICKED,self.PdaClose,self)
	-- кнопка установки метки
	ctrl = xml:Init3tButton("btn_pda_install_mapspot",self.stat)
	self:Register(ctrl,"btn_pda_install_mapspot")
	self:AddCallback("btn_pda_install_mapspot",ui_events.BUTTON_CLICKED,self.InstallMS,self)
	-- кнопка удалени€ метки
	ctrl = xml:Init3tButton("btn_pda_remove_mapspot",self.stat)
	self:Register(ctrl,"btn_pda_remove_mapspot")
	self:AddCallback("btn_pda_remove_mapspot",ui_events.BUTTON_CLICKED,self.RemoveMS,self)
    initial = true
end

function PdaWindow:ShowWnd()
    if initial and rec_wnd.stat~= nil then rec_wnd.stat:Show(true) end
end

function PdaWindow:HideWnd()
    if initial and rec_wnd.stat~= nil then rec_wnd.stat:Show(false) end
end

function PdaWindow:DetachWnd()
	self.owner:DetachChild(self.stat) initial = false
end

local pda_window = false
function on_info(info_id)
	if info_id=="ui_pda" then
	    pda_window = level.main_input_receiver()
        if not initial then	rec_wnd = PdaWindow(level.main_input_receiver()) end
    	if not rec_wnd.stat:IsShown() then rec_wnd:ShowWnd() end
	elseif info_id=="ui_pda_hide" then
		if rec_wnd then rec_wnd:DetachWnd() end
 	end
end

function PdaWindow:PdaClose()
    if pda_window and pda_window:IsShown() then level.start_stop_menu(pda_window,true) end
end

function PdaWindow:InstallMS()
	level.start_stop_menu(MapspotPda(),true)
end

function PdaWindow:RemoveMS()
	level.start_stop_menu(RemoveMapspotPda(),true)
end

--*********************************************
-- ”—“јЌќ¬ ј ћ≈“ќ 
--*********************************************
local max_string_len = 18
class "MapspotPda" (CUIScriptWnd)
function MapspotPda:__init(owner) super()
	self.owner = owner
	self:Init(0,0,1024,768)
	self.rus_lat = true
	self.ClickBtn={}
    local lat=[[qwertyuiop[]asdfghjkl;'zxcvbnm,./QWERTYUIOP{}ASDFGHJKL:"ZXCVBNM<>?!@#$%^&*()-_+=\| 0123456789]]
    local rus=[[йцукенгшщзхъфывапролджэ€чсмитьбю.…÷” ≈Ќ√Ўў«’Џ‘џ¬јѕ–ќЋƒ∆Ёя„—ћ»“№Ѕё,!"є;%:?*()-_+=\/ 0123456789]]
    self.translit={}
    for i=1,string.len(rus) do
	    self.translit[string.sub(lat,i,i)] = string.sub(rus,i,i)
    end
    self.strings={}   -- набор статиков со строками текста
    self.num_string=0 -- номер актуальной строки
    self.text={}	  -- таблица элементов класса symbol
    self.pos=0	      -- номер текущего редактируемого символа
    self.ClickBtn[1]=function() self:ruslat() end
    self.ClickBtn[4]=function() if self.pos>1 then self.pos=self.pos-1 self:show() end end
    self.ClickBtn[5]=function() if self.pos>10 then self.pos=self.pos-10 self:show() end end
    self.ClickBtn[6]=function() if self.pos+10<#self.text then self.pos=self.pos+10 self:show() end end
    self.ClickBtn[7]=function() if self.pos~=#self.text then self.pos=self.pos+1 self:show() end end
    -- окно установки
    self.bkgr=CUIStatic()
    self.bkgr:Init(498,160,240,98)
    self.bkgr:SetAutoDelete(true)
    self.bkgr:InitTexture("ui\\ui_pda_1")
    self.bkgr:SetStretchTexture(true)
    self.bkgr:SetOriginalRect(10,925,240,98)
    self:AttachChild(self.bkgr)
	-- поле ввода имени
	self.eb=CUIEditBox()
    self.eb:Init(-600,10,800,17)
	self.eb:SetTextColor(GetARGB(0,0,0,0))
	self.bkgr:AttachChild(self.eb)
	-- кнопка установить
    self.btn_inst=CUI3tButton()
	self.btn_inst:SetAutoDelete(true)
    self.btn_inst:Init(50,35,17,17)
    self.btn_inst:InitTexture("ui_PDA_mapspot_install")
	self.bkgr:AttachChild(self.btn_inst)
    self.btn_inst:SetWindowName("btn_inst")
    self:Register(self.btn_inst)
    self:AddCallback("btn_inst",ui_events.BUTTON_DOWN,self.mapspot_install,self)
    -- кнопка закрыть
    self.btn_exit=CUI3tButton()
    self.btn_exit:SetAutoDelete(true)
    self.btn_exit:Init(10,35,17,17)
    self.btn_exit:InitTexture("ui_PDA_mapspot_cansel")
    self.bkgr:AttachChild(self.btn_exit)
    self.btn_exit:SetWindowName("btn_exit")
    self:Register(self.btn_exit)
    self:AddCallback("btn_exit",ui_events.BUTTON_DOWN,self.on_exit,self)
	-- переключение раскладки
	self.btn_ruslat=CUI3tButton()
    self.bkgr:AttachChild(self.btn_ruslat)
    self.btn_ruslat:Init(30,35,17,17)
	self.btn_ruslat:InitTexture("ui_PDA_mapspot_lang")
    self.btn_ruslat:SetWindowName("btn_ruslat")
    self:Register(self.btn_ruslat)
    self:AddCallback("btn_ruslat",ui_events.BUTTON_DOWN,self.ruslat,self)
	-- подсказка
	local xml = CScriptXmlInit()
	xml:ParseFile("ui_shadows_addon.xml")
	xml:Init3tButton("btn_pda_mapspot_editbox",self.bkgr)
end

-- раскладка
function MapspotPda:ruslat()
	self.rus_lat = not self.rus_lat
end

function MapspotPda:add_char(dik)
local t = {
    [DIK_keys.DIK_0]={0,0},[DIK_keys.DIK_1]={1,1},[DIK_keys.DIK_2]={2,2},[DIK_keys.DIK_3]={3,3},[DIK_keys.DIK_4]={4,4},
    [DIK_keys.DIK_5]={5,5},[DIK_keys.DIK_6]={6,6},[DIK_keys.DIK_7]={7,7},[DIK_keys.DIK_8]={8,8},[DIK_keys.DIK_9]={9,9},
    [DIK_keys.DIK_A]={"ф","а"},[DIK_keys.DIK_ADD]={"+","+"},[DIK_keys.DIK_APOSTROPHE]={"э","'"},[DIK_keys.DIK_B]={"и","b"},
    [DIK_keys.DIK_BACKSLASH]={"\\","\\"},[DIK_keys.DIK_C]={"с","с"},[DIK_keys.DIK_CIRCUMFLEX]={"^","^"},[DIK_keys.DIK_COLON]={":",":"},
    [DIK_keys.DIK_COMMA]={"б",","},[DIK_keys.DIK_D]={"в","d"},[DIK_keys.DIK_DIVIDE]={"/","/"},[DIK_keys.DIK_E]={"у","е"},[DIK_keys.DIK_F]={"а","f"},
    [DIK_keys.DIK_G]={"п","g"},[DIK_keys.DIK_H]={"р","h"},[DIK_keys.DIK_I]={"ш","i"},[DIK_keys.DIK_J]={"о","j"},[DIK_keys.DIK_K]={"л","k"},
    [DIK_keys.DIK_L]={"д","l"},[DIK_keys.DIK_LBRACKET]={"х","["},[DIK_keys.DIK_M]={"ь","m"},[DIK_keys.DIK_MINUS]={"-","-"},[DIK_keys.DIK_MULTIPLY]={"*","*"},
    [DIK_keys.DIK_N]={"т","n"},[DIK_keys.DIK_NUMPAD0]={0,0},[DIK_keys.DIK_NUMPAD1]={1,1},[DIK_keys.DIK_NUMPAD2]={2,2},[DIK_keys.DIK_NUMPAD3]={3,3},
    [DIK_keys.DIK_NUMPAD4]={4,4},[DIK_keys.DIK_NUMPAD5]={5,5},[DIK_keys.DIK_NUMPAD6]={6,6},[DIK_keys.DIK_NUMPAD7]={7,7},[DIK_keys.DIK_NUMPAD8]={8,8},
    [DIK_keys.DIK_NUMPAD9]={9,9},[DIK_keys.DIK_O]={"щ","o"},[DIK_keys.DIK_P]={"з","p"},[DIK_keys.DIK_Q]={"й","q"},[DIK_keys.DIK_R]={"к","r"},
    [DIK_keys.DIK_RBRACKET]={"ъ","]"},[DIK_keys.DIK_S]={"ы","s"},[DIK_keys.DIK_SEMICOLON]={"ж",";"},[DIK_keys.DIK_SLASH]={".","/"},[DIK_keys.DIK_SPACE]={" "," "},
    [DIK_keys.DIK_SUBTRACT]={"_","_"},[DIK_keys.DIK_T]={"е","t"},[DIK_keys.DIK_U]={"г","u"},[DIK_keys.DIK_UNDERLINE]={"_","_"},[DIK_keys.DIK_V]={"м","v"},
    [DIK_keys.DIK_W]={"ц","w"},[DIK_keys.DIK_X]={"ч","x"},[DIK_keys.DIK_Y]={"н","y"},[DIK_keys.DIK_Z]={"€","z"}}
    local txt=t[dik] and t[dik][self.rus_lat and 1 or 2]
    if txt then self:add_txt(txt) end
end

-- удал€ем символ перед курсором
function MapspotPda:OnButton_backspace_clicked()
	if self.pos>0 then
		if self.pos>1 then
			local es = self.text[self.pos] and self.text[self.pos]:get_end_string() or false
			table.remove(self.text,self.pos)
			self.pos=self.pos-1 if self.text[self.pos] then self.text[self.pos]:set_end_string(es) end
		elseif self.text[self.pos]:get_char()~="" then self.text[self.pos]:set_char("")
		end
		self:show()
	end
end

-- удал€ем символ после курсора
function MapspotPda:OnButton_delete_clicked()
	if self.text[self.pos + 1] then table.remove(self.text,self.pos + 1) self:show() end
end

-- получить текст со страницы
function MapspotPda:get_text()
	local s=[[]]
	local c=0
    for k,v in pairs(self.text) do s=s..v:get_char() c=c+1 if v:get_end_string() or c==max_string_len then s=s..[[\n]] c=0 end end
	return s
end

-- показать страницу
function MapspotPda:show()
    for k,v in pairs(self.strings)do self.bkgr:DetachChild(v) end
    while next(self.strings) do table.remove(self.strings) end
    local s=""
    local c=0
    for k,v in pairs(self.text) do s=s..v:get_char() c=c+1
	    if k==self.pos then s=s.."_" c=c+1 end
	    if v:get_end_string() or c>=max_string_len then self:add_st(s) s="" c=0 end
    end
    if s~="" then self:add_st(s) end
end

-- размещение набираемого текста
function MapspotPda:add_st(s)
	local st=CUIStatic()
	st:Init(11,11+10*table.getn(self.strings),10,10)
	st:SetText(s)
	st:SetTextColor(255,216,186,140)
	table.insert(self.strings,st)
	self.bkgr:AttachChild(st)
end

-- добавление символа после текущего
function MapspotPda:add_character(txt)
    if #self.text < 17 then
	    txt = txt and (self.rus_lat and self.translit[txt] or txt) or "" self.pos = self.pos + 1
	    local s=symbol()
	    s:__init(txt) table.insert(self.text,self.pos,s) self:show()
    end
end

-- устанавливаем метку
function MapspotPda:mapspot_install()
	local mapspot = alife():create("mapspot_space_restrictor",db.actor:position(),db.actor:level_vertex_id(),db.actor:game_vertex_id())
	shadows_addon.add_spot_on_map(mapspot.id,"user",self:get_text()) self:on_exit()
	shadows_addon.play_sound([[device\pda\pda_mapspot]])
end

-- закрываем меню установки
function MapspotPda:on_exit()
    level.start_stop_menu(self,true)
end

function MapspotPda:OnKeyboard(dik,keyboard_action)
    CUIScriptWnd.OnKeyboard(self,dik,keyboard_action)
	if keyboard_action == ui_events.WINDOW_KEY_PRESSED then
		if dik == DIK_keys.DIK_ESCAPE then self:on_exit()
		elseif dik == DIK_keys.DIK_RETURN then self:mapspot_install()
		elseif dik == DIK_keys.DIK_BACK then self:OnButton_backspace_clicked()
		elseif dik == DIK_keys.DIK_DELETE then self:OnButton_delete_clicked()
		elseif dik == DIK_keys.DIK_LEFT then self.ClickBtn[4]()
		elseif dik == DIK_keys.DIK_RIGHT then self.ClickBtn[7]()
		elseif dik == DIK_keys.DIK_UP then self.ClickBtn[5]()
		elseif dik == DIK_keys.DIK_DOWN then self.ClickBtn[6]()
		elseif dik == DIK_keys.DIK_HOME then self.pos=1 self:show()
		elseif dik == DIK_keys.DIK_END then self.pos=#self.text self:show()
		elseif dik == DIK_keys.DIK_TAB then
		elseif dik == DIK_keys.DIK_NUMPAD0 then self:add_character(0)
		elseif dik == DIK_keys.DIK_NUMPAD1 then self:add_character(1)
		elseif dik == DIK_keys.DIK_NUMPAD2 then self:add_character(2)
		elseif dik == DIK_keys.DIK_NUMPAD3 then self:add_character(3)
		elseif dik == DIK_keys.DIK_NUMPAD4 then self:add_character(4)
		elseif dik == DIK_keys.DIK_NUMPAD5 then self:add_character(5)
		elseif dik == DIK_keys.DIK_NUMPAD6 then self:add_character(6)
		elseif dik == DIK_keys.DIK_NUMPAD7 then self:add_character(7)
		elseif dik == DIK_keys.DIK_NUMPAD8 then self:add_character(8)
		elseif dik == DIK_keys.DIK_NUMPAD9 then self:add_character(9)
		elseif dik == DIK_keys.DIK_DIVIDE then self:add_character("/")
		elseif dik == DIK_keys.DIK_MULTIPLY then self:add_character("*")
		elseif dik == DIK_keys.DIK_ADD then self:add_character("+")
		elseif dik == DIK_keys.DIK_NUMPADCOMMA then self:add_character(".")
		elseif dik == DIK_keys.DIK_LCONTROL then self.ClickBtn[1]()
		elseif dik == DIK_keys.DIK_RSHIFT then
		else
			local ch=string.sub(self.eb:GetText(),-1)
			if ch and ch~="" then self:add_character(ch) self.eb:SetText("") end
		end
	end
	return true
end

class "symbol"
function symbol:__init(char)
	self.char=char or ""
	self.end_string=false
end

function symbol:set_char(char)
	self.char=char
end

function symbol:get_char()
	return self.char
end

function symbol:set_end_string(f)
	self.end_string=f
end

function symbol:get_end_string()
	return self.end_string
end

--*********************************************
-- ”ƒјЋ≈Ќ»≈ ћ≈“ќ 
--*********************************************
class "RemoveMapspotItem" (CUIListItemEx)
function RemoveMapspotItem:__init() super()
	self:SetWndRect(2,2,338,20)
	self.item_name = CUIStatic()
	self.item_name:SetAutoDelete(true)
	self.item_name:SetWndRect(0,0,338,20)
	self.item_name:SetText("Mapspot Info")
	self.item_name:SetFont(GetFontLetterica16Russian())
	self.item_name:SetTextColor(255,216,186,140)
	self:AttachChild(self.item_name)
end

class "RemoveMapspotPda" (CUIScriptWnd)
function RemoveMapspotPda:__init() super()
	self:InitControls()
	self:FillList()
end

function RemoveMapspotPda:__finalize() end
function RemoveMapspotPda:InitControls()
	self:Init(0,0,1024,768)
	-- окно удалени€
	self.back=CUIStatic()
    self.back:Init(498,160,367,145)
    self.back:SetAutoDelete(true)
    self.back:InitTexture("ui\\ui_pda_1")
    self.back:SetStretchTexture(true)
    self.back:SetOriginalRect(260,877,367,145)
    self:AttachChild(self.back)
	-- список
	self.list=CUIListWnd()
    self.list:Init(11,11,338,75)
    self.list:SetItemHeight(18)
	self.list:ShowSelectedItem(true)
	self:Register(self.list,"list_name")
    self.back:AttachChild(self.list)
	self:AddCallback("list_name",ui_events.WINDOW_LBUTTON_DB_CLICK,self.OnListRemoveItem,self)
	-- кнопка закрыть
    self.btn_exit=CUI3tButton()
    self.btn_exit:SetAutoDelete(true)
    self.btn_exit:Init(10,95,17,17)
    self.btn_exit:InitTexture("ui_PDA_mapspot_cansel")
    self.back:AttachChild(self.btn_exit)
    self.btn_exit:SetWindowName("btn_exit")
    self:Register(self.btn_exit)
    self:AddCallback("btn_exit",ui_events.BUTTON_DOWN,self.OnExit,self)
end

-- наполн€ем список
function RemoveMapspotPda:FillList()
	self.mapspots = {}
    local sim = alife()
    for i=1,65534 do
        local sobj = sim:object(i)
        if sobj and sobj:section_name()=="mapspot_space_restrictor" then
			table.insert(self.mapspots,{sobj.id,game.translate_string(sim:level_name(game_graph():vertex(sobj.m_game_vertex_id):level_id()))})
        end
    end
    local list_box = self:GetListWnd("list_name")
    for k,v in pairs(self.mapspots) do
        local mapspot_item = RemoveMapspotItem()
		mapspot_item.item_name:SetText("Znacznik #"..k.."   [Lokalizacja: "..v[2].."]")
        list_box:AddItem(mapspot_item)
    end
end

-- при нажатии на метку удал€ем еЄ
function RemoveMapspotPda:OnListRemoveItem()
    local list = self:GetListWnd("list_name")
	if list:GetSize()==0 then return end
    local index = list:GetSelectedItem()
	if index==-1 then return end
    local id = self.mapspots[index+1][1]
    local sobj = alife():object(id)
    if sobj then alife():release(sobj) end
    table.remove(self.mapspots,index+1)
    list:RemoveItem(index)
end

-- закрываем меню
function RemoveMapspotPda:OnExit()
	self:GetHolder():start_stop_menu(self,true)
end
